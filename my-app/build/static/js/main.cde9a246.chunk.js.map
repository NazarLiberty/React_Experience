{"version":3,"sources":["components/Snackbar.js","App/App.js","index.js"],"names":["Alert","props","elevation","variant","MySnackbar","severity","text","React","useState","open","setOpen","handleClose","event","reason","del","onClick","children","Snackbar","autoHideDuration","onClose","ControlButton","symbol","elClass","type","className","action","Wrapper","parseList","localStorage","length","JSON","parse","getItem","list","day","setDay","page","setPage","index","setIndex","setList","setItem","stringify","DayList","addDay","countDay","o","done","id","push","newList","map","e","indexOf","forEach","element","TaskPage","key","splice","click","addTask","inputValue","alert","count","unshift","delDay","edit","renderList","renderDay","Day","active","dayClass","onChange","target","value","placeholder","TaskList","actionDeleteTask","actionEdit","Task","editor","setEditor","setText","checkClass","App","testList","Number","console","log","ReactDOM","render","document","getElementById"],"mappings":"gQAIA,SAASA,EAAMC,GACX,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGjD,SAASG,EAAWH,GAAQ,IAE3BI,EACAC,EAH0B,EACNC,IAAMC,UAAS,GADT,mBACvBC,EADuB,KACjBC,EADiB,KAUxBC,EAAc,SAACC,EAAOC,GACT,cAAXA,GAIJH,GAAQ,IAUZ,OARIT,EAAMa,KACNT,EAAW,QACXC,EAAO,0BAGPD,EAAW,UACXC,EAAO,uBAGP,yBAAKS,QAtBW,WAEhBL,GAAQ,KAqBHT,EAAMe,SACP,kBAACC,EAAA,EAAD,CAAUR,KAAMA,EAAMS,iBAAkB,IAAMC,QAASR,GACnD,kBAAC,EAAD,CAAOQ,QAASR,EAAaN,SAAUA,GAClCC,KCjCrB,SAASc,EAAcnB,GACnB,IAAIoB,EAAS,GACTC,EAAU,SAad,MAZmB,WAAfrB,EAAMsB,OACND,GAAW,gBACXD,EAAS,uBAAGG,UAAU,wBAEP,YAAfvB,EAAMsB,OAAsBF,EAAS,uBAAGG,UAAU,kBAAsBF,GAAW,qBACpE,WAAfrB,EAAMsB,OACND,GAAW,qBACXD,EAAS,uBAAGG,UAAU,sBAEP,YAAfvB,EAAMsB,OAAsBF,EAAS,uBAAGG,UAAU,qBAAyBF,GAAW,iBACvE,aAAfrB,EAAMsB,OAAuBF,EAAS,uBAAGG,UAAU,gBAAoBF,GAAW,iBACnE,aAAfrB,EAAMsB,OAAuBF,EAAS,KAAMC,GAAW,iBACpD,4BAAQE,UAAWF,EAASP,QAASd,EAAMwB,QAASJ,GAG/D,SAASK,EAAQzB,GACb,IAAI0B,EACyBA,EAAzBC,aAAaC,OAAS,EAAeC,KAAKC,MAAMH,aAAaI,QAAQ,SACxD/B,EAAMgC,KAHH,MAQEzB,mBAAS,GARX,mBAQb0B,EARa,KAQRC,EARQ,OASI3B,mBAASmB,GATb,mBASbS,EATa,KASPC,EATO,OAUM7B,mBAAS,GAVf,mBAUb8B,EAVa,KAUNC,EAVM,OAWI/B,mBAAS4B,EAAKE,GAAOF,MAXzB,mBAWbH,EAXa,KAWPO,EAXO,KA+GpB,OAnGAZ,aAAaa,QAAQ,OAAQX,KAAKY,UAAUN,IAmGrC,yBAAKZ,UAAU,WAClB,kBAACmB,EAAD,CAASP,KAAMA,EAAMQ,OAxEzB,WACIC,IACAjB,aAAaa,QAAQ,WAAYI,GACjC,IAAIC,EAAI,CACJZ,IAAKW,EAAW,EAChBT,KAAM,CAAC,CACH9B,KAAM,OAAQyC,MAAM,EAAOC,GAAI,GAEnC,CACI1C,KAAM,WAAa,CAACuC,EAAW,GAAK,OAAQE,MAAM,EAAOC,GAAI,KAGrEZ,EAAKa,KAAKH,GACV,IAAII,EAAUd,EAAKe,KAAI,SAACC,GAAD,OAAOA,KAC9Bf,EAAQa,IA0DmCf,OAxD/C,SAAsBD,GAClB,IAAImB,EACJjB,EAAKkB,SAAQ,SAAAC,GACLA,EAAQrB,MAAQA,IAChBmB,EAAUjB,EAAKiB,QAAQE,GACvBf,EAAQe,EAAQnB,UAGxBG,EAASc,GACTlB,EAAOD,IA+C0DA,IAAKA,IACtE,kBAACsB,EAAD,CAAUvB,KAAMA,EAAMnB,IArF1B,SAA0B2C,GACtBxB,EAAKqB,SAAQ,SAAAC,GACLA,EAAQP,KAAOS,GAAKrB,EAAKE,GAAOF,KAAKsB,OAAOtB,EAAKE,GAAOF,KAAKiB,QAAQE,GAAU,MAEvFf,EAAQJ,EAAKE,GAAOF,KAAKe,KAAI,SAACC,GAAD,OAAOA,OAiFSO,MA/EjD,SAAeF,GACXxB,EAAKqB,SAAQ,SAAAC,GACLA,EAAQP,KAAOS,IAAKF,EAAQR,MAAQQ,EAAQR,SAEpDP,EAAQP,EAAKkB,KAAI,SAACC,GAAD,OAAOA,OA4EpBQ,QArGR,WACI,GAA0B,IAAtBC,EAAWhC,OAAciC,MAAM,oCAC9B,CACDC,IACAnC,aAAaa,QAAQ,QAASsB,GAC9B,IAAIjB,EAAI,CACJxC,KAAMuD,EACNd,MAAM,EACNC,GAAIe,GAER3B,EAAKE,GAAOF,KAAK4B,QAAQlB,GACzB,IAAII,EAAUd,EAAKE,GAAOF,KAAKe,KAAI,SAACC,GAAD,OAAOA,KAC1CZ,EAAQU,KAyFgBe,OA9ChC,WACI,IAAIZ,EACAH,EAAU,GACdd,EAAKkB,SAAQ,SAAAC,GACLA,EAAQrB,MAAQA,EAAKgB,EAAQD,KAAKM,GACjCF,EAAUjB,EAAKiB,QAAQE,MAEhB,IAAZF,GAAiC,IAAhBjB,EAAKP,SACtBQ,EAAQa,GACRX,EAAS,GACTJ,EAAOC,EAAK,GAAGF,KACfM,EAAQJ,EAAK,GAAGA,OAGJ,IAAZiB,GAAiBjB,EAAKP,OAAS,IAC/BQ,EAAQa,GACRX,EAAS,GACTJ,EAAOC,EAAK,GAAGF,KACfM,EAAQJ,EAAK,GAAGA,OAGhBiB,IAAYjB,EAAKP,OAAS,GAAKO,EAAKP,OAAS,IAC7CU,EAASc,EAAU,GACnBhB,EAAQa,GACRf,EAAOC,EAAKiB,EAAU,GAAGnB,KACzBM,EAAQJ,EAAKiB,EAAU,GAAGjB,OAE1BiB,EAAU,GAAKA,EAAUjB,EAAKP,OAAS,IACvCU,EAASc,EAAU,GACnBhB,EAAQa,GACRf,EAAOC,EAAKiB,EAAU,GAAGnB,KACzBM,EAAQJ,EAAKiB,EAAU,GAAGjB,QAeuBF,IAAKA,EAAKgC,KAZnE,SAAwBT,EAAKnD,GACzB8B,EAAKkB,SAAQ,SAAAC,GACTA,EAAQnB,KAAKkB,SAAQ,SAAAF,GACbA,EAAEJ,KAAOS,IAAKL,EAAE9C,KAAOA,SAGnC,IAAI6D,EAAa/B,EAAKe,KAAI,SAACC,GAAD,OAAOA,KACjCf,EAAQ8B,OAShB,SAASxB,EAAQ1C,GACb,SAASkC,EAAOD,GACZjC,EAAMkC,OAAOD,GAKjB,IAAIkC,EAAYnE,EAAMmC,KAAKe,KAAI,SAACC,GAC5B,OAAIA,EAAElB,MAAQjC,EAAMiC,IAAY,kBAACmC,EAAD,CAAK/D,KAAM8C,EAAElB,IAAKuB,IAAKL,EAAElB,IAAKA,IAAKkB,EAAElB,IAAKC,OAAQA,EAAQmC,QAAQ,IAC3F,kBAACD,EAAD,CAAK/D,KAAM8C,EAAElB,IAAKuB,IAAKL,EAAElB,IAAKA,IAAKkB,EAAElB,IAAKC,OAAQA,OAE7D,OACI,yBAAKX,UAAU,YACX,kBAACpB,EAAD,CAAYU,KAAK,GAAjB,IAAyB,kBAACM,EAAD,CAAeG,KAAK,SAASE,OAT9D,WACIxB,EAAM2C,YAQF,KACCwB,GAQb,SAASC,EAAIpE,GACT,IAAIsE,EAAW,MAKf,OAJItE,EAAMqE,SAAQC,GAAY,gBAIvB,yBAAK/C,UAAW+C,EAAUxD,QAHjC,SAAgBmB,GACZjC,EAAMkC,OAAOlC,EAAMiC,OAGnB,yBAAKV,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,cACdvB,EAAMK,KAJJ,IAIU,0BAAMkB,UAAU,YAAhB,QAGrB,SAASgC,EAASvD,GAmBd,OAAO,yBAAKuB,UAAU,aAElB,kBAACpB,EAAD,CAAYU,KAAK,GAAM,kBAACM,EAAD,CAAeG,KAAK,SAASE,OApBxD,WACIxB,EAAMgE,OAAOhE,EAAMiC,SAoBnB,yBAAKV,UAAU,oBACX,wBAAIA,UAAU,oBAAd,OAAsCvB,EAAMiC,IAA5C,gBACA,6BAAK,2BAAOX,KAAK,OAAOC,UAAU,mBAAmBgD,SAX7D,SAAqBpB,GACjBS,EAAaT,EAAEqB,OAAOC,OAU0DC,YAAY,8BACpF,kBAACvD,EAAD,CAAeG,KAAK,UAAUE,OArB1C,SAAuBgC,GACnBxD,EAAM2D,QAAQH,MAmBV,KAEA,kBAACmB,EAAD,CAAU3C,KAAMhC,EAAMgC,KAAMnB,IAnBpC,SAA0B2C,GACtBxD,EAAMa,IAAI2C,IAkB6CE,MAhB3D,SAAeF,GACXxD,EAAM0D,MAAMF,IAeyDS,KAVzE,SAAoBT,EAAKnD,GACrBL,EAAMiE,KAAKT,EAAKnD,QAaxB,SAASsE,EAAS3E,GACd,SAAS4E,EAAiBpB,GACtBxD,EAAMa,IAAI2C,GAEd,SAASE,EAAMF,GACXxD,EAAM0D,MAAMF,GAEhB,SAASqB,EAAWrB,EAAKnD,GACrBL,EAAMiE,KAAKT,EAAKnD,GAEpB,IAAI6D,EAAalE,EAAMgC,KAAKkB,KAAI,SAACC,GAC7B,OAAO,kBAAC2B,EAAD,CAAMzE,KAAM8C,EAAE9C,KAAMyC,KAAMK,EAAEL,KAAMU,IAAKL,EAAEJ,GAAIlC,IAAK+D,EAAkB7B,GAAII,EAAEJ,GAAIW,MAAOA,EAAOO,KAAMY,OAE7G,OAA0B,IAAtB7E,EAAMgC,KAAKJ,OAAqB,yBAAKL,UAAU,oBAAf,mBACxB,yBAAKA,UAAU,wBACtB2C,GAGT,SAASY,EAAK9E,GAAQ,IAAD,EACWO,mBAAS,GADpB,mBACVwE,EADU,KACFC,EADE,OAEOzE,mBAASP,EAAMK,MAFtB,mBAEVA,EAFU,KAEJ4E,EAFI,KASjB,SAASJ,IACL7E,EAAMiE,KAAKjE,EAAM+C,GAAI1C,GACrB2E,GAAWD,GAKf,IAAIG,EAAa,mBACb7D,EAAU,kBAGd,OAFIrB,EAAM8C,OAAMoC,GAAc,6BAC1BlF,EAAM8C,OAAMzB,GAAW,4BACvB0D,IAAW/E,EAAM8C,KACV,yBAAKvB,UAAU,2BAClB,yBAAKA,UAAWF,GACZ,yBAAKE,UAAW2D,GAAhB,KACA,2BAAO5D,KAAK,OAAOiD,SAX/B,SAA0BpB,GACtB8B,EAAQ9B,EAAEqB,OAAOC,QAUsCA,MAAOpE,EAAMkB,UAAU,2BAE1E,yBAAKA,UAAU,gBACX,kBAACJ,EAAD,CAAeG,KAAK,WAAWE,OAAQqD,MAIvC,yBAAKtD,UAAU,2BACvB,yBAAKA,UAAWF,EAASP,QA1B7B,WACId,EAAM0D,MAAM1D,EAAM+C,MA0Bd,yBAAKxB,UAAW2D,GAAhB,KACClF,EAAMK,MAEX,yBAAKkB,UAAU,gBACX,kBAACJ,EAAD,CAAeG,KAAK,WAAWE,OAAQqD,IACvC,kBAAC1D,EAAD,CAAeG,KAAK,UAAUE,OAnCtC,WACIxB,EAAMa,IAAIb,EAAM+C,SAsCjB,SAASoC,IACZ,OAAO,kBAAC1D,EAAD,CAASO,KAAMoD,IAG1B,IAmBItB,EACAlB,EApBAwC,EAAW,CACX,CACInD,IAAK,EACLE,KAAM,CAAC,CACH9B,KAAM,uBAAwByC,MAAM,EAAMC,GAAI,UAItD,CACId,IAAK,EACLE,KAAM,IAEV,CACIF,IAAK,EACLE,KAAM,KAGVyB,EAAa,GAI2BE,EAAN,OAAlCnC,aAAaI,QAAQ,SAA2B,EACvCsD,OAAO1D,aAAaI,QAAQ,UACMa,EAAN,OAArCjB,aAAaI,QAAQ,YAAiC,EAC1CsD,OAAO1D,aAAaI,QAAQ,aAC5CuD,QAAQC,IAAIzB,G,MClSZ0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cde9a246.chunk.js","sourcesContent":["import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport function MySnackbar(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let severity;\r\n    let text;\r\n    const handleClick = () => {\r\n\r\n        setOpen(true);\r\n\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    if (props.del) {\r\n        severity = \"error\"\r\n        text = \"Day have been deleted\"\r\n    }\r\n    else {\r\n        severity = \"success\"\r\n        text = \"Day have been added\"\r\n    }\r\n    return (\r\n        <div onClick={handleClick}>\r\n            {props.children}\r\n            <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {text}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState } from 'react';\r\nimport { MySnackbar } from \"../components/Snackbar\"\r\n\r\nfunction ControlButton(props) {\r\n    let symbol = \"\"\r\n    let elClass = \"button\"\r\n    if (props.type === \"addDay\") {\r\n        elClass += \" button--days\"\r\n        symbol = <i className=\"far fa-plus-square\"></i>\r\n    }\r\n    if (props.type === \"addTask\") { symbol = <i className=\"fas fa-marker\"></i>; elClass += \" button--add_task\" }\r\n    if (props.type === \"delDay\") {\r\n        elClass += \" button--task_page\"\r\n        symbol = <i className=\"far fa-trash-alt\"></i>\r\n    }\r\n    if (props.type === \"delTask\") { symbol = <i className=\"far fa-trash-alt\"></i>; elClass += \" button--task\" }\r\n    if (props.type === \"editTask\") { symbol = <i className=\"far fa-edit\"></i>; elClass += \" button--task\" }\r\n    if (props.type === \"editSave\") { symbol = \"OK\"; elClass += \" button--task\" }\r\n    return <button className={elClass} onClick={props.action}>{symbol}</button>\r\n}\r\n\r\nfunction Wrapper(props) {\r\n    let parseList;\r\n    if (localStorage.length > 0) parseList = JSON.parse(localStorage.getItem(\"days\"))\r\n    else parseList = props.list\r\n\r\n    // if (localStorage.length) { listTT = JSON.parse(localStorage.getItem(\"days\")); console.log(\"+\") }\r\n    // const [countDay, setCountDay] = useState(parseList.length)\r\n    // const [count, setCount] = useState(parseList[0].page.length)\r\n    const [day, setDay] = useState(1)\r\n    const [page, setPage] = useState(parseList)\r\n    const [index, setIndex] = useState(0)\r\n    const [list, setList] = useState(page[index].page);\r\n    localStorage.setItem(\"days\", JSON.stringify(page))\r\n    function actionAddTask() {\r\n        if (inputValue.length === 0) alert(\"Type text of new task please\")\r\n        else {\r\n            count++\r\n            localStorage.setItem('count', count)\r\n            let o = {\r\n                text: inputValue,\r\n                done: false,\r\n                id: count,\r\n            }\r\n            page[index].page.unshift(o)\r\n            let newList = page[index].page.map((e) => e)\r\n            setList(newList)\r\n        }\r\n    }\r\n    function actionDeleteTask(key) {\r\n        list.forEach(element => {\r\n            if (element.id === key) page[index].page.splice(page[index].page.indexOf(element), 1)\r\n        });\r\n        setList(page[index].page.map((e) => e))\r\n    }\r\n    function click(key) {\r\n        list.forEach(element => {\r\n            if (element.id === key) element.done = !element.done\r\n        });\r\n        setList(list.map((e) => e))\r\n    }\r\n    function actionAddDay() {\r\n        countDay++\r\n        localStorage.setItem('countDay', countDay)\r\n        let o = {\r\n            day: countDay + 1,\r\n            page: [{\r\n                text: \"Hey!\", done: false, id: 0,\r\n            },\r\n            {\r\n                text: \"This is \" + [countDay + 1] + \" day\", done: false, id: 1,\r\n            }]\r\n        }\r\n        page.push(o)\r\n        let newList = page.map((e) => e)\r\n        setPage(newList)\r\n    }\r\n    function actionSetDay(day) {\r\n        let indexOf;\r\n        page.forEach(element => {\r\n            if (element.day === day) {\r\n                indexOf = page.indexOf(element)\r\n                setList(element.page)\r\n            }\r\n        });\r\n        setIndex(indexOf)\r\n        setDay(day)\r\n\r\n    }\r\n    function actionDeleteDay() {\r\n        let indexOf; // deleted item\r\n        let newList = []\r\n        page.forEach(element => {\r\n            if (element.day !== day) newList.push(element)\r\n            else indexOf = page.indexOf(element)\r\n        });\r\n        if (indexOf === 0 && page.length === 2) {\r\n            setPage(newList)\r\n            setIndex(0)\r\n            setDay(page[1].day)\r\n            setList(page[1].page)\r\n\r\n        }\r\n        if (indexOf === 0 && page.length > 2) {\r\n            setPage(newList)\r\n            setIndex(1)\r\n            setDay(page[1].day)\r\n            setList(page[1].page)\r\n\r\n        }\r\n        if (indexOf === page.length - 1 && page.length > 1) {\r\n            setIndex(indexOf - 1)\r\n            setPage(newList)\r\n            setDay(page[indexOf - 1].day)\r\n            setList(page[indexOf - 1].page)\r\n        }\r\n        if (indexOf > 0 && indexOf < page.length - 1) {\r\n            setIndex(indexOf - 1)\r\n            setPage(newList)\r\n            setDay(page[indexOf - 1].day)\r\n            setList(page[indexOf - 1].page)\r\n        }\r\n    }\r\n    function actionEditTask(key, text) {\r\n        page.forEach(element => {\r\n            element.page.forEach(e => {\r\n                if (e.id === key) e.text = text;\r\n            })\r\n        });\r\n        let renderList = page.map((e) => e)\r\n        setPage(renderList)\r\n    }\r\n    return <div className=\"wrapper\">\r\n        <DayList page={page} addDay={actionAddDay} setDay={actionSetDay} day={day} />\r\n        <TaskPage list={list} del={actionDeleteTask} click={click}\r\n            addTask={actionAddTask} delDay={actionDeleteDay} day={day} edit={actionEditTask} />\r\n    </div>\r\n}\r\n\r\nfunction DayList(props) {\r\n    function setDay(day) {\r\n        props.setDay(day)\r\n    }\r\n    function addDay() {\r\n        props.addDay()\r\n    }\r\n    let renderDay = props.page.map((e) => {\r\n        if (e.day === props.day) return <Day text={e.day} key={e.day} day={e.day} setDay={setDay} active={true} />\r\n        return <Day text={e.day} key={e.day} day={e.day} setDay={setDay} />\r\n    })\r\n    return (\r\n        <div className=\"day-list\">\r\n            <MySnackbar del={false}> <ControlButton type=\"addDay\" action={addDay} /> </MySnackbar>\r\n            {renderDay}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction Day(props) {\r\n    let dayClass = \"day\"\r\n    if (props.active) dayClass += \" day--active\"\r\n    function setDay(day) {\r\n        props.setDay(props.day)\r\n    }\r\n    return <div className={dayClass} onClick={setDay}>\r\n        <div className=\"day__line day__line--sub1\"></div>\r\n        <div className=\"day__line day__line--sub2\"></div>\r\n        <div className=\"day__line\"></div>\r\n        {props.text} <span className=\"day__sub\">DAY</span>\r\n    </div>\r\n}\r\nfunction TaskPage(props) {\r\n    function delDay() {\r\n        props.delDay(props.day)\r\n    }\r\n    function actionAddTask(key) {\r\n        props.addTask(key)\r\n    }\r\n    function actionDeleteTask(key) {\r\n        props.del(key)\r\n    }\r\n    function click(key) {\r\n        props.click(key)\r\n    }\r\n    function valueReader(e) {\r\n        inputValue = e.target.value\r\n    }\r\n    function actionEdit(key, text) {\r\n        props.edit(key, text)\r\n    }\r\n    return <div className=\"task-page\">\r\n\r\n        <MySnackbar del={true}><ControlButton type=\"delDay\" action={delDay} /></MySnackbar>\r\n        <div className=\"task-page__inner\">\r\n            <h1 className=\"task-page__title\">Day {props.day}. Task list:</h1>\r\n            <div><input type=\"text\" className=\"task-page__input\" onChange={valueReader} placeholder=\"What is yout focus today?\" />\r\n                <ControlButton type=\"addTask\" action={actionAddTask} /> </div>\r\n            <TaskList list={props.list} del={actionDeleteTask} click={click} edit={actionEdit} />\r\n        </div>\r\n    </div>\r\n}\r\nfunction TaskList(props) {\r\n    function actionDeleteTask(key) {\r\n        props.del(key)\r\n    }\r\n    function click(key) {\r\n        props.click(key)\r\n    }\r\n    function actionEdit(key, text) {\r\n        props.edit(key, text)\r\n    }\r\n    let renderList = props.list.map((e) => {\r\n        return <Task text={e.text} done={e.done} key={e.id} del={actionDeleteTask} id={e.id} click={click} edit={actionEdit} />\r\n    })\r\n    if (props.list.length === 0) return <div className=\"task-page__title\">Add some tasks!</div>\r\n    else return <div className=\"task-page__task-list\">\r\n        {renderList}\r\n    </div>\r\n}\r\nfunction Task(props) {\r\n    const [editor, setEditor] = useState(0)\r\n    const [text, setText] = useState(props.text)\r\n    function actionDelete() {\r\n        props.del(props.id)\r\n    }\r\n    function click() {\r\n        props.click(props.id)\r\n    }\r\n    function actionEdit() {\r\n        props.edit(props.id, text)\r\n        setEditor(!editor)\r\n    }\r\n    function actionChangeText(e) {\r\n        setText(e.target.value)\r\n    }\r\n    let checkClass = \"task-page__check\"\r\n    let elClass = \"task-page__task\";\r\n    if (props.done) checkClass += \" task-page__check--active\"\r\n    if (props.done) elClass += \" task-page__task--active\";\r\n    if (editor && !props.done) {\r\n        return <div className=\"task-page__task-wrapper\">\r\n            <div className={elClass}>\r\n                <div className={checkClass}> </div>\r\n                <input type=\"text\" onChange={actionChangeText} value={text} className=\"task-page__task-input\" />\r\n            </div>\r\n            <div className=\"button-block\">\r\n                <ControlButton type=\"editSave\" action={actionEdit} />\r\n            </div>\r\n        </div>\r\n    }\r\n    else return <div className=\"task-page__task-wrapper\">\r\n        <div className={elClass} onClick={click}>\r\n            <div className={checkClass}> </div>\r\n            {props.text}\r\n        </div>\r\n        <div className=\"button-block\">\r\n            <ControlButton type=\"editTask\" action={actionEdit} />\r\n            <ControlButton type=\"delTask\" action={actionDelete} />\r\n        </div>\r\n    </div>\r\n}\r\nexport function App() {\r\n    return <Wrapper list={testList} />\r\n}\r\n\r\nlet testList = [\r\n    {\r\n        day: 1,\r\n        page: [{\r\n            text: \"Complete application\", done: true, id: \"d1_0\",\r\n        },\r\n        ]\r\n    },\r\n    {\r\n        day: 2,\r\n        page: []\r\n    },\r\n    {\r\n        day: 3,\r\n        page: []\r\n    }\r\n]\r\nlet inputValue = \"\";\r\n\r\nlet count;\r\nlet countDay;\r\nif (localStorage.getItem(\"count\") === null) count = 2\r\nelse count = Number(localStorage.getItem('count'))\r\nif (localStorage.getItem(\"countDay\") === null) countDay = 2\r\nelse countDay = Number(localStorage.getItem('countDay'))\r\nconsole.log(count)\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App/App.js\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}